{"version":3,"file":"static/js/247.a287ffd4.chunk.js","mappings":"gNA0CA,UAtCA,YAA4B,IAAZA,EAAW,EAAXA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAgBN,GADnB,OACVO,EADU,OAEhBJ,EAAQI,EAAKL,MAFG,2CAAH,qDAIfG,GACD,GAAE,CAACL,KAGF,4BACE,iCACCE,EAAKM,OAAS,GACb,wBACGN,EAAKO,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAK,MAEP,uBAAIH,EAAMI,QACV,uBAAIJ,EAAMK,cANHL,EAAMM,GADF,OAYjB,8CAIP,C,sLCpCKC,EAAU,mCACVC,EAAW,+BAEJC,EAAiB,mCAAG,sGACRC,MAAM,GAAD,OACvBF,EADuB,uCACgBD,IAFb,cACzBI,EADyB,gBAIZA,EAASC,OAJG,cAIzBf,EAJyB,yBAKxBA,GALwB,2CAAH,qDAQjBgB,EAAY,mCAAG,WAAMC,GAAN,yFACHJ,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBAC2BO,IAF7B,cACpBH,EADoB,gBAIPA,EAASC,OAJF,cAIpBf,EAJoB,yBAKnBA,GALmB,2CAAH,sDAQZkB,EAAe,mCAAG,WAAMzB,GAAN,yFACNoB,MAAM,GAAD,OACvBF,EADuB,kBACLlB,EADK,oBACciB,IAFb,cACvBI,EADuB,gBAIVA,EAASC,OAJC,cAIvBf,EAJuB,yBAKtBA,GALsB,2CAAH,sDAQfD,EAAe,mCAAG,WAAMN,GAAN,yFACNoB,MAAM,GAAD,OACvBF,EADuB,kBACLlB,EADK,4BACsBiB,IAFrB,cACvBI,EADuB,gBAIVA,EAASC,OAJC,cAIvBf,EAJuB,yBAKtBA,GALsB,2CAAH,sDAQfmB,EAAe,mCAAG,WAAM1B,GAAN,yFACNoB,MAAM,GAAD,OACvBF,EADuB,kBACLlB,EADK,4BACsBiB,IAFrB,cACvBI,EADuB,gBAIVA,EAASC,OAJC,cAIvBf,EAJuB,yBAKtBA,GALsB,2CAAH,qD,sBCnC5B,SAASoB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","data/Api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieCredits } from 'data/Api';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const data = await getMovieCredits(movieId);\n      setCast(data.cast);\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                alt={''}\n              />\n              <p>{actor.name}</p>\n              <p>{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No actors found.</p>\n      )}\n    </div>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Cast;\n","const API_KEY = '996f90502411052111a97ebd41f1eb4e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useState","cast","setCast","useEffect","fetchCast","getMovieCredits","data","length","map","actor","src","profile_path","alt","name","character","id","API_KEY","BASE_URL","getTrendingMovies","fetch","response","json","searchMovies","query","getMovieDetails","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}